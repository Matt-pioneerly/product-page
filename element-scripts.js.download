(function ($) {
    "use strict";

    var $document = $(document),
        $window = $(window),
        isEditMode = false;

    function mybe_note_undefined($selector, $data_atts) {
        return ($selector.data($data_atts) !== undefined) ? $selector.data($data_atts) : '';
    }

    /**
     * Video Popup
     * @param $scope
     * @param $
     * @constructor
     */
    var PlayBtn = function ($scope, $) {
        /*----------------------------------
        03. Feature Icon Activation
        --------------------------------------*/
        $('.popup-video').magnificPopup({
            type: 'iframe',
        });
    }

    /**
     * slickactivation
     * @param $scope
     * @param $
     */
    var slickactivationforPortfolio = function ($scope, $) {

        var portfolio_carousel_options = $scope.find('.rn-slick-activation').eq(0);
        if (portfolio_carousel_options.length > 0) {
            var settings = portfolio_carousel_options.data('settings');
            var arrows = settings['arrows'];
            var dots = settings['dots'];
            var autoplay = settings['autoplay'];
            var autoplay_speed = parseInt(settings['autoplay_speed']) || 2500;
            var infinite = settings['infinite'];
            var for_xl_desktop = settings['for_xl_desktop'];
            var slidesToShow = settings['slidesToShow'];
            var for_laptop = settings['for_laptop'];
            var for_tablet = settings['for_tablet'];
            var for_mobile = settings['for_mobile'];
            var for_xs_mobile = settings['for_xs_mobile'];
            portfolio_carousel_options.not('.slick-initialized').slick({
                slidesToShow: for_xl_desktop,
                slidesToScroll: 1,
                dots: dots,
                centerMode: false,
                focusOnSelect: true,
                arrows: arrows,
                prevArrow: '<button class="slide-arrow prev-arrow"><i class="feather-arrow-left"></i></button>',
                nextArrow: '<button class="slide-arrow next-arrow"><i class="feather-arrow-right"></i></button>',
                autoplay: autoplay,
                autoplaySpeed: autoplay_speed,
                infinite: infinite,
                adaptiveHeight: true,
                responsive: [
                    {
                        breakpoint: 1921,
                        settings: {
                            slidesToShow: slidesToShow
                        }
                    },
                    {
                        breakpoint: 1200,
                        settings: {
                            slidesToShow: for_laptop
                        }
                    },
                    {
                        breakpoint: 992,
                        settings: {
                            slidesToShow: for_tablet,
                            arrows: false
                        }
                    },
                    {
                        breakpoint: 768,
                        settings: {
                            slidesToShow: for_mobile,
                            arrows: false
                        }
                    },
                    {
                        breakpoint: 576,
                        settings: {
                            slidesToShow: for_xs_mobile,
                            arrows: false
                        }
                    }
                ]
            });
        }
    }

    /**
     * slickactivation
     * @param $scope
     * @param $
     */
    var TestimonialActivation = function ($scope, $) {

        var testimonial_carousel_options = $scope.find('.testimonial-activation').eq(0);
        if (testimonial_carousel_options.length > 0) {
            var settings = testimonial_carousel_options.data('settings');
            var arrows = settings['arrows'];
            var dots = settings['dots'];
            var autoplay = settings['autoplay'];
            var autoplay_speed = parseInt(settings['autoplay_speed']) || 2500;
            var infinite = settings['infinite'];
            testimonial_carousel_options.not('.slick-initialized').slick({
                infinite: infinite,
                slidesToShow: 1,
                slidesToScroll: 1,
                dots: dots,
                arrows: arrows,
                autoplay: autoplay,
                autoplaySpeed: autoplay_speed,
                adaptiveHeight: true,
                cssEase: 'linear',
                prevArrow: '<button class="slide-arrow prev-arrow"><i class="feather-arrow-left"></i></button>',
                nextArrow: '<button class="slide-arrow next-arrow"><i class="feather-arrow-right"></i></button>'

            });
        }
    }


    var template_gallery = function ($scope, $) {

        var template_carousel_options = $scope.find('.template-galary-activation').eq(0);
        if (template_carousel_options.length > 0) {
            var settings = template_carousel_options.data('settings');
            var arrows = settings['arrows'];
            var dots = settings['dots'];
            var autoplay = settings['autoplay'];
            var autoplay_speed = parseInt(settings['autoplay_speed']) || 2500;
            var infinite = settings['infinite'];
            var for_xl_desktop = settings['for_xl_desktop'];
            var slidesToShow = settings['slidesToShow'];
            var for_laptop = settings['for_laptop'];
            var for_tablet = settings['for_tablet'];
            var for_mobile = settings['for_mobile'];
            var for_xs_mobile = settings['for_xs_mobile'];
            template_carousel_options.not('.slick-initialized').slick({
                infinite: infinite,
                slidesToShow: for_xl_desktop,
                slidesToScroll: 1,
                dots: dots,
                arrows: arrows,
                autoplay: autoplay,
                autoplaySpeed: autoplay_speed,
                adaptiveHeight: true,
                cssEase: 'linear',
                centerMode: false,
                prevArrow: '<button class="slide-arrow prev-arrow"><i class="feather-arrow-left"></i></button>',
                nextArrow: '<button class="slide-arrow next-arrow"><i class="feather-arrow-right"></i></button>',
                responsive: [
                    {
                        breakpoint: 1921,
                        settings: {
                            slidesToShow: slidesToShow
                        }
                    },
                    {
                        breakpoint: 1200,
                        settings: {
                            slidesToShow: for_laptop
                        }
                    },
                    {
                        breakpoint: 992,
                        settings: {
                            slidesToShow: for_tablet,
                            arrows: false
                        }
                    },
                    {
                        breakpoint: 768,
                        settings: {
                            slidesToShow: for_mobile,
                            arrows: false
                        }
                    },
                    {
                        breakpoint: 576,
                        settings: {
                            slidesToShow: for_xs_mobile,
                            arrows: false
                        }
                    }
                ]

            });
        }
    }

    /**
     * slickactivation
     * @param $scope
     * @param $
     */
    var BrandCarouselActivation = function ($scope, $) {

        var testimonial_carousel_options = $scope.find('.testimonial-activation').eq(0);
        if (testimonial_carousel_options.length > 0) {
            var settings = testimonial_carousel_options.data('settings');
            var arrows = settings['arrows'];
            var dots = settings['dots'];
            var autoplay = settings['autoplay'];
            var autoplay_speed = parseInt(settings['autoplay_speed']) || 2500;
            var infinite = settings['infinite'];
            testimonial_carousel_options.not('.slick-initialized').slick({
                infinite: infinite,
                slidesToShow: 1,
                slidesToScroll: 1,
                dots: dots,
                arrows: arrows,
                autoplay: autoplay,
                autoplaySpeed: autoplay_speed,
                adaptiveHeight: true,
                cssEase: 'linear',
                prevArrow: '<button class="slide-arrow prev-arrow"><i class="feather-arrow-left"></i></button>',
                nextArrow: '<button class="slide-arrow next-arrow"><i class="feather-arrow-right"></i></button>'

            });
        }
    }

    /**
     * Gallery Options
     * @param $scope
     * @param $
     * @constructor
     */
    var Gallery = function ($scope, $) {
        var rn_gallery_area = $scope.find('.rn-gallery-area').eq(0);
        var uniq_id = rn_gallery_area.attr('id');

        $('#' + uniq_id + ' .rn-masonary-wrapper').imagesLoaded(function () {
            // filter items on button click
            $('#' + uniq_id + ' .messonry-button').on('click', 'button', function () {
                var filterValue = $(this).attr('data-filter');
                $grid.isotope({
                    filter: filterValue
                });
            });
            // init Isotope
            var $grid = $('#' + uniq_id + ' .mesonry-list').isotope({
                itemSelector: '.masonry_item',
                percentPosition: true,
                transitionDuration: '0.7s',
                layoutMode: 'fitRows',
                masonry: {
                    // use outer width of grid-sizer for columnWidth
                    columnWidth: '.masonry_item',
                }
            });
        });

        $('#' + uniq_id + ' .messonry-button button').on('click', function (event) {
            $(this).siblings('.is-checked').removeClass('is-checked');
            $(this).addClass('is-checked');
            event.preventDefault();
        });
    }

    /**
     * Portfolio Filter Options
     * @param $scope
     * @param $
     * @constructor
     */
    var PortfolioFilter = function ($scope, $) {
        var rn_portfolio_area = $scope.find('.rn-portfolio-area').eq(0);
        var uniq_id = rn_portfolio_area.attr('id');

        $('#' + uniq_id + ' .container', '#' + uniq_id + ' .container-fluid').imagesLoaded(function () {
            // filter items on button click
            $('#' + uniq_id + ' .messonry-button').on('click', 'button', function () {
                var filterValue = $(this).attr('data-filter');
                $grid.isotope({
                    filter: filterValue
                });
            });
            // init Isotope
            var $grid = $('#' + uniq_id + ' .rn-filterable-portfolios').isotope({
                itemSelector: '.rn-filterable-portfolio-item',
                percentPosition: true,
                transitionDuration: '0.7s',
                layoutMode: 'fitRows',
                masonry: {
                    // use outer width of grid-sizer for columnWidth
                    columnWidth: '.rn-filterable-portfolio-item',
                }
            });
        });

        $('#' + uniq_id + ' .messonry-button button').on('click', function (event) {
            $(this).siblings('.is-checked').removeClass('is-checked');
            $(this).addClass('is-checked');
            event.preventDefault();
        });
    }

    /**
     * CounterUp
     */
    var Counterup = function ($scope, $) {
        $('.count').counterUp({
            delay: 10,
            time: 1000
        });
    }

    /**
     * Parallax
     * @param $scope
     * @param $
     * @constructor
     */
    var Parallax = function ($scope, $) {
        function stellarParallax() {
            if ($(window).width() > 1024) {
                $.stellar();
            } else {
                $.stellar('destroy');
                $('.parallax').css('background-position', '');
            }
        }
        function SetResizeContent() {
            stellarParallax();
        }
        SetResizeContent();
    }


    /**
     * particles
     */
    var Particles = function ($scope, $) {
        // slider-creative-agency
        var creative_agency_options = $scope.find('.slider-creative-agency').eq(0);
        if (creative_agency_options.length > 0) {
            var settings = creative_agency_options.data('settings');
            var id = settings['id'];
            var parallax = settings['parallax'];
            var particles = settings['particles'];
            var particles_color = (settings['particles_color'] ? settings['particles_color'] : '#ffffff');
            var particles_opacity = (settings['particles_opacity'] ? settings['particles_opacity'] : '0.5');
        }
        if (particles) {
            particlesJS(id,

                {
                    "particles": {
                        "number": {
                            "value": 50,
                            "density": {
                                "enable": true,
                                "value_area": 800
                            }
                        },
                        "color": {
                            "value": particles_color
                        },
                        "shape": {
                            "type": "circle",
                            "stroke": {
                                "width": 0,
                                "color": "#000000"
                            },
                            "polygon": {
                                "nb_sides": 4
                            },
                            "image": {
                                "src": "img/github.svg",
                                "width": 100,
                                "height": 100
                            }
                        },
                        "opacity": {
                            "value": particles_opacity,
                            "random": false,
                            "anim": {
                                "enable": false,
                                "speed": 1,
                                "opacity_min": 0.1,
                                "sync": false
                            }
                        },
                        "size": {
                            "value": 4,
                            "random": true,
                            "anim": {
                                "enable": false,
                                "speed": 40,
                                "size_min": 0.1,
                                "sync": false
                            }
                        },
                        "line_linked": {
                            "enable": true,
                            "distance": 150,
                            "color": particles_color,
                            "opacity": 0.4,
                            "width": 1
                        },
                        "move": {
                            "enable": true,
                            "speed": 6,
                            "direction": "none",
                            "random": false,
                            "straight": false,
                            "out_mode": "out",
                            "attract": {
                                "enable": false,
                                "rotateX": 600,
                                "rotateY": 1200
                            }
                        }
                    },
                    "interactivity": {
                        "detect_on": "canvas",
                        "events": {
                            "onhover": {
                                "enable": true,
                                "mode": "repulse"
                            },
                            "onclick": {
                                "enable": true,
                                "mode": "push"
                            },
                            "resize": true
                        },
                        "modes": {
                            "grab": {
                                "distance": 400,
                                "line_linked": {
                                    "opacity": 1
                                }
                            },
                            "bubble": {
                                "distance": 400,
                                "size": 40,
                                "duration": 2,
                                "opacity": 8,
                                "speed": 3
                            },
                            "repulse": {
                                "distance": 200
                            },
                            "push": {
                                "particles_nb": 4
                            },
                            "remove": {
                                "particles_nb": 2
                            }
                        }
                    },
                    "retina_detect": true,
                    "config_demo": {
                        "hide_card": false,
                        "background_color": "#b61924",
                        "background_image": "",
                        "background_position": "50% 50%",
                        "background_repeat": "no-repeat",
                        "background_size": "cover"
                    }
                }

            );
        }

    }

    /**
     * lightGallery
     * @param $scope
     * @param $
     * @constructor
     */
    var lightGalleryJS = function ($scope, $) {
        lightGallery(document.getElementsByClassName('animated-lightbox')[0], {
            thumbnail: true,
            animateThumb: false,
            showThumbByDefault: false,
            cssEasing: 'linear'
        });
    }

    var salActive = function ($scope, $) {
        sal({
            threshold: 0.01,
            once: true,
        });
    }

    // Init 
    $(window).on('elementor/frontend/init', function () {
        if (elementorFrontend.isEditMode()) {
            isEditMode = true;
        }

        elementorFrontend.hooks.addAction('frontend/element_ready/doob-testimonial-slider.default', TestimonialActivation);
        elementorFrontend.hooks.addAction('frontend/element_ready/doob-video-popup.default', PlayBtn);
        elementorFrontend.hooks.addAction('frontend/element_ready/doob-video-banner.default', PlayBtn);
        elementorFrontend.hooks.addAction('frontend/element_ready/doob-designer-banner.default', PlayBtn);
        elementorFrontend.hooks.addAction('frontend/element_ready/doob-portfolio.default', slickactivationforPortfolio);
        elementorFrontend.hooks.addAction('frontend/element_ready/doob-gallery.default', Gallery);
        elementorFrontend.hooks.addAction('frontend/element_ready/doob-portfolio.default', PortfolioFilter);
        elementorFrontend.hooks.addAction('frontend/element_ready/doob-counterup.default', Counterup);
        elementorFrontend.hooks.addAction('frontend/element_ready/doob-blog.default', slickactivationforPortfolio);
        elementorFrontend.hooks.addAction('frontend/element_ready/doob-agency-banner.default', Particles);
        elementorFrontend.hooks.addAction('frontend/element_ready/doob-agency-banner.default', Parallax);
        elementorFrontend.hooks.addAction('frontend/element_ready/doob-corporate-banner.default', Particles);
        elementorFrontend.hooks.addAction('frontend/element_ready/doob-corporate-banner.default', Parallax);
        elementorFrontend.hooks.addAction('frontend/element_ready/doob-main-slider.default', slickactivationforPortfolio);
        elementorFrontend.hooks.addAction('frontend/element_ready/doob-gallery.default', lightGalleryJS);
        elementorFrontend.hooks.addAction('frontend/element_ready/doob-brand.default', slickactivationforPortfolio);
        elementorFrontend.hooks.addAction('frontend/element_ready/doob-addonname.default', salActive);
        elementorFrontend.hooks.addAction('frontend/element_ready/doob-main-banner.default', slickactivationforPortfolio);
        elementorFrontend.hooks.addAction('frontend/element_ready/doob-blog-slider.default', slickactivationforPortfolio);
        elementorFrontend.hooks.addAction('frontend/element_ready/doob-testimonial-slider.default', template_gallery);
        elementorFrontend.hooks.addAction('frontend/element_ready/slider.default', slickactivationforPortfolio);
    });


    function title_animation(widgetInstanceId) {

        if (widgetInstanceId) {
            // Get all elements with the class 'get-animation-unique-id'

            // Loop through each element
            widgetInstanceId.forEach(function(id) {
                // Get the current element
                let element = $('#' + id);

                // Ensure the element has an ID before proceeding
                if (element.length) {
                    // Get the unique ID of the current element
                   
                        let animationData = element.attr('data-doob_animation');

                        var animationObject = JSON.parse(animationData);
                        var animationDelay = parseInt(animationObject.animationdelay) || 2500;
                        var barAnimationDelay = parseInt(animationObject.barAnimationDelay) || 3800;
                        var barWaiting = barAnimationDelay - 3000;
                        var lettersDelay = parseInt(animationObject.letter_delay) || 50;
                        var typeLettersDelay = parseInt(animationObject.typelettersdelay) || 150;
                        var selectionDuration = parseInt(animationObject.selectionduration) || 500;
                        var typeAnimationDelay = selectionDuration + 800;
                        var revealDuration = parseInt(animationObject.revealduration) || 600;
                        var revealAnimationDelay = parseInt(animationObject.revealanimationdelay) || 1500;

                        initHeadline();

                        function initHeadline() {
                            //insert <i> element for each letter of a changing word
                            singleLetters($('.cd-headline.letters').find('b'));
                            //initialise headline animation
                            animateHeadline($('.cd-headline'));
                        }

                        function singleLetters($words) {
                            $words.each(function () {
                                var word = $(this),
                                    letters = word.text().split(''),
                                    selected = word.hasClass('is-visible');
                                for (i in letters) {
                                    if (word.parents('.rotate-2').length > 0) letters[i] = '<em>' + letters[i] + '</em>';
                                    letters[i] = (selected) ? '<i class="in">' + letters[i] + '</i>' : '<i>' + letters[i] + '</i>';
                                }
                                var newLetters = letters.join('');
                                word.html(newLetters).css('opacity', 1);
                            });
                        }

                        function animateHeadline($headlines) {
                            var duration = animationDelay;
                            $headlines.each(function () {
                                var headline = $(this);

                                if (headline.hasClass('loading-bar')) {
                                    duration = barAnimationDelay;
                                    setTimeout(function () {
                                        headline.find('.cd-words-wrapper').addClass('is-loading')
                                    }, barWaiting);
                                } else if (headline.hasClass('clip')) {
                                    var spanWrapper = headline.find('.cd-words-wrapper'),
                                        newWidth = spanWrapper.width() + 10
                                    spanWrapper.css('width', newWidth);
                                } else if (!headline.hasClass('type')) {
                                    //assign to .cd-words-wrapper the width of its longest word
                                    var words = headline.find('.cd-words-wrapper b'),
                                        width = 0;
                                    words.each(function () {
                                        var wordWidth = $(this).width();
                                        if (wordWidth > width) width = wordWidth;
                                    });
                                    headline.find('.cd-words-wrapper').css('width', width);
                                };

                                //trigger animation
                                setTimeout(function () {
                                    hideWord(headline.find('.is-visible').eq(0))
                                }, duration);
                            });
                        }

                        function hideWord($word) {
                            var nextWord = takeNext($word);

                            if ($word.parents('.cd-headline').hasClass('type')) {
                                var parentSpan = $word.parent('.cd-words-wrapper');
                                parentSpan.addClass('selected').removeClass('waiting');
                                setTimeout(function () {
                                    parentSpan.removeClass('selected');
                                    $word.removeClass('is-visible').addClass('is-hidden').children('i').removeClass('in').addClass('out');
                                }, selectionDuration);
                                setTimeout(function () {
                                    showWord(nextWord, typeLettersDelay)
                                }, typeAnimationDelay);

                            } else if ($word.parents('.cd-headline').hasClass('letters')) {
                                var bool = ($word.children('i').length >= nextWord.children('i').length) ? true : false;
                                hideLetter($word.find('i').eq(0), $word, bool, lettersDelay);
                                showLetter(nextWord.find('i').eq(0), nextWord, bool, lettersDelay);

                            } else if ($word.parents('.cd-headline').hasClass('clip')) {
                                $word.parents('.cd-words-wrapper').animate({
                                    width: '2px'
                                }, revealDuration, function () {
                                    switchWord($word, nextWord);
                                    showWord(nextWord);
                                });

                            } else if ($word.parents('.cd-headline').hasClass('loading-bar')) {
                                $word.parents('.cd-words-wrapper').removeClass('is-loading');
                                switchWord($word, nextWord);
                                setTimeout(function () {
                                    hideWord(nextWord)
                                }, barAnimationDelay);
                                setTimeout(function () {
                                    $word.parents('.cd-words-wrapper').addClass('is-loading')
                                }, barWaiting);

                            } else {
                                switchWord($word, nextWord);
                                setTimeout(function () {
                                    hideWord(nextWord)
                                }, animationDelay);
                            }
                        }

                        function showWord($word, $duration) {
                            if ($word.parents('.cd-headline').hasClass('type')) {
                                showLetter($word.find('i').eq(0), $word, false, $duration);
                                $word.addClass('is-visible').removeClass('is-hidden');

                            } else if ($word.parents('.cd-headline').hasClass('clip')) {
                                $word.parents('.cd-words-wrapper').animate({
                                    'width': $word.width() + 10
                                }, revealDuration, function () {
                                    setTimeout(function () {
                                        hideWord($word)
                                    }, revealAnimationDelay);
                                });
                            }
                        }

                        function hideLetter($letter, $word, $bool, $duration) {
                            $letter.removeClass('in').addClass('out');

                            if (!$letter.is(':last-child')) {
                                setTimeout(function () {
                                    hideLetter($letter.next(), $word, $bool, $duration);
                                }, $duration);
                            } else if ($bool) {
                                setTimeout(function () {
                                    hideWord(takeNext($word))
                                }, animationDelay);
                            }

                            if ($letter.is(':last-child') && $('html').hasClass('no-csstransitions')) {
                                var nextWord = takeNext($word);
                                switchWord($word, nextWord);
                            }
                        }

                        function showLetter($letter, $word, $bool, $duration) {
                            $letter.addClass('in').removeClass('out');

                            if (!$letter.is(':last-child')) {
                                setTimeout(function () {
                                    showLetter($letter.next(), $word, $bool, $duration);
                                }, $duration);
                            } else {
                                if ($word.parents('.cd-headline').hasClass('type')) {
                                    setTimeout(function () {
                                        $word.parents('.cd-words-wrapper').addClass('waiting');
                                    }, 200);
                                }
                                if (!$bool) {
                                    setTimeout(function () {
                                        hideWord($word)
                                    }, animationDelay)
                                }
                            }
                        }

                        function takeNext($word) {
                            return (!$word.is(':last-child')) ? $word.next() : $word.parent().children().eq(0);
                        }

                        function takePrev($word) {
                            return (!$word.is(':first-child')) ? $word.prev() : $word.parent().children().last();
                        }

                        function switchWord($oldWord, $newWord) {
                            $oldWord.removeClass('is-visible').addClass('is-hidden');
                            $newWord.removeClass('is-hidden').addClass('is-visible');
                        }

                   
                }
            });
        }
    }

    $(window).on('elementor/frontend/init', function () {
        if (elementorFrontend.isEditMode()) {
            
            elementorFrontend.hooks.addAction('frontend/element_ready/widget', function ($scope) {
                var widgetInstanceIds = [];

                // Iterate over each element with the class 'get-animation-unique-id'
                $scope.find('.get-animation-unique-id').each(function () {
                    // Get the ID of the current element
                    var elementId = $(this).attr('id');

                    // Store the ID in the array
                    widgetInstanceIds.push(elementId);
                });

                if (widgetInstanceIds.length > 0) {
                    title_animation(widgetInstanceIds);
                }
            });
        }
    });


}(jQuery));